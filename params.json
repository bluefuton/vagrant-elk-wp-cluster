{
  "name": "Vagrant-elk-cluster",
  "tagline": "Create a ELK Cluster under Vagrant",
  "body": "Vagrant ELK (Elasticsearch + Logstash + Kibana) Cluster\r\n=============================\r\n\r\n**For ES 2.0 and above**. For ES 1.x see branch es1.x.\r\n\r\nCreate an ELK Stack with a single bash command in Vmware, Parallels, or VirtualBox :\r\n\r\n```bash\r\nvagrant up --no-parallel --provider <virtualbox|parallels|vmware_fusion|vmware_workstation>\r\n```\r\n<div style='color:red'>**Read Pre Requisites below.**</div>**I would also highly recommend that you read this file in its entirety at least once.**<br/><br/>\r\n\r\n---\r\n\r\n\r\n**Software versions information**\r\n\r\n| Software              | Version     | Description                        |\r\n| --------------------------------- | ----------- | ----------------------------------------- |\r\n| CentOS|7.1| Guest OS <br/> VMWare and Virtual box :[chef/centos-7.1](https://atlas.hashicorp.com/chef/boxes/centos-7.1) <br/> & parallels : [parallels/centos-7.1](https://atlas.hashicorp.com/parallels/boxes/centos-7.1) |\r\n| Java (oracle)              | 1.8.0_65    |    [Download JDK](http://www.oracle.com/technetwork/java/javase/downloads/) |\r\n| ElasticSearch                     | 2.1.0       | [Reference Guide](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html) / [Definitive Guide](https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html) |\r\n| Kibana | 4.3.0 | [Reference Guide](https://www.elastic.co/guide/en/kibana/current/index.html)|\r\n| LogStash | 2.1.0 | [Reference Guide](https://www.elastic.co/guide/en/logstash/current/index.html)|\r\n\r\n**Cluster Details**\r\n\r\n_Default Cluster Name_ : **es-dev-cluster**\r\n\r\n_Default Network Setup_: **Private Network 10.1.1.0/24**\r\n\r\n_Default CPU Cores Per Node_ : **1**\r\n\r\n_Default RAM Per Node_ : **1024MB**\r\n\r\n_ES Endpoint URL_ : [**http://localhost:9200/**](http://localhost:9200/) (_from Host Machine_)\r\n\r\n_Kibana Endpoint URL_ : [**http://localhost:5601/**](http://localhost:5601/) (_from Host Machine_)\r\n\r\n_Logstash Syslog Ports_ : **localhost:5514 (Both TCP and UDP)** (_from Host Machine_)\r\n\r\n_Cluster Nodes :_\r\n\r\n\r\n| VM Name| Node Name|Default IP| VM Port <=> Host Port|Description|\r\n| -------|----------|----------|----------------------|-----------|\r\n|vm1|thor|10.1.1.11|9200<=>9201<br/>9300<=>9301|1<sup>st</sup> Elasticsearch Node|\r\n|vm2|zeus|10.1.1.12|9200<=>9202<br/>9300<=>9302|2<sup>nd</sup> Elasticsearch Node|\r\n|vm3|isis|10.1.1.13|9200<=>9203<br/>9300<=>9303|3<sup>rd</sup> Elasticsearch Node|\r\n|vm4|baal|10.1.1.14|9200<=>9204<br/>9300<=>9304|4<sup>th</sup> Elasticsearch Node<br/>(_Not started by default_)|\r\n|vm5|shifu|10.1.1.15|9200<=>9205<br/>9300<=>9305|5<sup>th</sup> Elasticsearch Node<br/>(_Not started by default_)|\r\n|vm250|kibana|10.1.1.250|**9200<=>9200<br/>9300<=>9300<br/>5601<=>5601**|Kibana + ES Client Node|\r\n|vm251|logstash|10.1.1.251|**5514<=>5514<br/>(TCP & UDP)**|Logstash Node|\r\n\r\n\r\n**WARNING**:  You'll need enough RAM to run VMs in your cluster. Each new VM launched within your cluster will have 1024M of RAM allocated.\r\n\r\n\r\n**Elasticsearch Plugins**\r\n\r\n\r\n| Plugin              | Version     | URL To Access                        |\r\n| --------------------------------- | ----------- | ----------------------------------------- |\r\n| [elasticsearch-mapper-attachments](https://github.com/elasticsearch/elasticsearch-mapper-attachments)  | 3.0.2      |  N.A. |\r\n|[elasticsearch-head](https://github.com/mobz/elasticsearch-head)| latest| [http://localhost:9200/\\_plugin/head/](http://localhost:9200/_plugin/head/)<br/>__NOT WORKING IN ES 2.0__ |\r\n|[elasticsearch-kopf](https://github.com/lmenezes/elasticsearch-kopf)| 2.0.0| [http://localhost:9200/\\_plugin/kopf](http://localhost:9200/_plugin/kopf) |\r\n|[elasticsearch-paramedic](https://github.com/karmi/elasticsearch-paramedic)|latest | [http://localhost:9200/\\_plugin/paramedic/](http://localhost:9200/_plugin/paramedic/)<br/>__NOT WORKING IN ES 2.0__|\r\n|[elasticsearch-HQ](https://github.com/royrusso/elasticsearch-HQ) | latest| [http://localhost:9200/\\_plugin/HQ/](http://localhost:9200/_plugin/HQ/)<br/>__NOT WORKING IN ES 2.0__|\r\n|[bigdesk](https://github.com/lukas-vlcek/bigdesk)|latest|[http://localhost:9200/\\_plugin/bigdesk](http://localhost:9200/_plugin/bigdesk)<br/>__NOT WORKING IN ES 2.0__ |\r\n|[Sense](https://www.elastic.co/guide/en/sense/current/index.html)|2.0.0|[http://localhost:5601/app/sense](http://localhost:5601/app/sense)|\r\n\r\n<br/>\r\n\r\n---\r\n\r\n\r\n\r\n1. Pre Requisite & Set up\r\n--\r\n\r\n**Must have on your host machine**\r\n\r\n* VirtualBox (last version) OR VMWare desktop|fusion OR parallels\r\n* Vagrant (>=1.7)\r\n* Respective vagrant plugins for vmware or parallels\r\n* cUrl (or another REST client to talk to ES)\r\n\r\n**Clone this repository**\r\n\r\n`git clone https://github.com/bhaskarvk/vagrant-elk-cluster.git`\r\n\r\n**Download Installation Files**\r\n\r\nThis needs to be done just once.\r\n\r\n*\tDownload JDK 8u65 64bit RPM from [Oracle](http://www.oracle.com/technetwork/java/javase/downloads/) \r\n*\tDownload elasticsearch-2.1.0.tar.gz from [elastic](https://www.elastic.co/downloads/elasticsearch)\r\n*\tDownload kibana-4.3.0-linux-x64.tar.gz from [elastic](https://www.elastic.co/downloads/kibana)\r\n*\tDownload logstash-2.1.0.tar.gz from [elastic](https://www.elastic.co/downloads/logstash)\r\n*\tPlace all the above files at the root of this repo.\r\n\r\nIf you need to upgrade any of the above, download respective version and change the version number in `lib/upgrade-es.sh` OR  `lib/upgrade-kibana.sh` Or  `lib/upgrade-logstash.sh` accordingly and re-run provisioning.\r\n\r\n\r\n2. How to run a new ELK Stack cluster\r\n--\r\n\r\n**Run the cluster**\r\n\r\nSimply go in the cloned directory (vagrant-elk-cluster by default).\r\nExecute this command :\r\n\r\n```bash\r\nvagrant up --no-parallel --provider <virtualbox|parallels|vmware_fusion|vmware_workstation>\r\n```\r\n\r\n I recommend starting in `no-parallel` mode as it is the safest, but you can also try with removing this argument.\r\n\r\nBy default 3 ElasticSearch Nodes are started: vm1, vm2, and vm3. One kibana (vm250) and one logstash (vm251) node are also started.\r\nYou can start a maximum of 5 Elasticsearch nodes. If you want you can increase this limit by changing the code but it is pointless to have a bigger cluster for dev|qa purposes.\r\n\r\nYou can change the cluster size with the `CLUSTER_COUNT` variable (min 1 and max 5):\r\n\r\n```bash\r\nCLUSTER_COUNT=5 vagrant up \r\n```\r\n\r\nYou can change the cluster name with the `CLUSTER_NAME` variable:\r\n\r\n```bash\r\nCLUSTER_NAME='es-qa-cluster' vagrant up\r\n```\r\n\r\nYou can change the cluster RAM used for each node with the `CLUSTER_RAM` variable:\r\n\r\n```bash\r\nCLUSTER_RAM=512 vagrant up\r\n```\r\n\r\nYou can change the cluster CPU used for each node with the `CLUSTER_CPU` variable:\r\n\r\n```bash\r\nCLUSTER_CPU=2 vagrant up\r\n```\r\n\r\nYou can change the cluster network IP address with the `CLUSTER_IP_PATTERN` variable:\r\n\r\n```bash\r\nCLUSTER_IP_PATTERN='172.16.15.%d' vagrant up\r\n```\r\n\r\n**NOTE** : Providing the `CLUSTER_NAME`, `CLUSTER_COUNT`, `CLUSTER_RAM`, `CLUSTER_CPU`, `CLUSTER_IP_PATTERN` variables is only required when you first start the cluster.\r\nVagrant will save/cache these values under the `.vagrant` directory, so you can run other commands without repeating yourself.\r\n\r\nOf course you can use all these variables at the same time :\r\n\r\n```bash\r\n$ CLUSTER_NAME='es-qa-cluster' CLUSTER_IP_PATTERN='172.16.25.%d' CLUSTER_COUNT=5 \\\r\nCLUSTER_RAM=512 CLUSTER_CPU=2 vagrant up\r\n```\r\n\r\n**Sample output**\r\n\r\n```\r\n$ vagrant status\r\n----------------------------------------------------------\r\n          Your ES cluster configurations\r\n----------------------------------------------------------\r\nCluster Name: dev-es-cluster\r\nCluster size: 3\r\nCluster network IP: 10.1.1.0\r\nCluster RAM (for each node): 1024\r\nCluster CPU (for each node): 1\r\n----------------------------------------------------------\r\n----------------------------------------------------------\r\nCurrent machine states:\r\n\r\nvm1                       stopped (parallels)\r\nvm2                       stopped (parallels)\r\nvm3                       stopped (parallels)\r\nkibana                    stopped (parallels)\r\nlogstash                  stopped (parallels)\r\n\r\nThis environment represents multiple VMs. The VMs are all listed\r\nabove with their current state. For more information about a specific\r\nVM, run `vagrant status NAME`....\r\n```\r\n\r\nThe names of the Elasticsearch VMs will follow the following pattern: `vm[0-9]+`.\r\nThe trailing number represents the index of the VM, starting at 1. Kibana and Logstash instances are simply named kibana and logstash.\r\n\r\nElasticSearch, Kibana, & Logstash instances are started during provisioning of respective VMs.\r\nThe command is launched into a new screen as root user inside the vagrant.\r\n\r\n\r\n**Stop the cluster**\r\n\r\n```bash\r\nvagrant halt\r\n```\r\n\r\nThis will stop the whole cluster. If you want to only stop one VM, you can use:\r\n\r\n```bash\r\nvagrant halt vm2\r\n```\r\n\r\nThis will stop the `vm2` instance.\r\n\r\n**Destroy the cluster**\r\n\r\n```bash\r\nvagrant destroy\r\nrm -rf .vagrant conf/*.yml conf/*.conf logs/* data/* \r\n```\r\n\r\nThis will stop the whole cluster. If you want to only stop one VM, you can use:\r\n\r\n```bash\r\nvagrant destroy vm2\r\n```\r\n\r\n:warning: If you destroy a VM, I suggest you to destroy all the cluster to be sure to have the same ES version in all of your nodes.\r\n\r\n**Managing ElasticSearch instances**\r\n\r\nEach VM has its own ElasticSearch instance running in a `screen` session named `elastic`.\r\nOnce connected to the VM, you can manage this instance with the following commands:\r\n\r\n* `sudo node-start`: starts the ES instance\r\n* `sudo node-stop`: stops the ES instance\r\n* `sudo node-restart`: restarts the ES instance\r\n* `sudo node-status`: displays ES instance's status\r\n* `sudo node-attach`: bring you to the screen session hosting the ES instance. Use `^Ad` to detach.\r\n\r\nYou should be brought to the screen session hosting ElasticSearch and see its log.\r\n\r\nFor Kibana use `sudo kibana-<start|stop|restart|status|attach>`, and similarly for Logstash use `sudo logstash-<start|stop|restart|status|attach>`\r\n\r\n\r\n**Default Directories**\r\n\r\nBy default the `data`, `logs` and `config` directories live outside of the VMs on the host, this way you can destroy and rebuild VMs as much as you like without losing your data. You can also upgrade Elasticsearch and not lose data.\r\n\r\n3. Access the Cluster\r\n--\r\n\r\nThe 9200 and 9300 ports of the host machine have been setup to forward to respective ports of ES Client Node running on Kibana.\r\nTo access ES Rest API from Host machine you can use [**http://localhost:9200/**](http://localhost:9200/) which will route the API Access via the Client Node running on the Kibana Node.\r\n\r\nTO access ES Rest Endpoint on a data node, use 9200 + \\<node number> on the host machine. so for vm1 it would be  9201 so [http://localhost:9201/](http://localhost:9201/) and 9202 for vm2, and so forth. But you will hardly need to access these endpoints from host machine.\r\n\r\nTo access Kibana from host machine use [**http://localhost:5601/**](http://localhost:5601/). Logstash node has been setup to receive syslog messages on port 5514 (TCP & UDP) and the host machine will forward anything on its port 5514 (TCP & UDP) to these ports.\r\n\r\n4. Configure your cluster\r\n--\r\n\r\nIf you need or want to change the default working configuration of your cluster,\r\nyou can do it adding/editing elasticsearch-<VM-Name>.yml files in `conf` directory.\r\nEach node configuration is shared with VM thanks to this \"conf\" directory.\r\n\r\nBy default, this configuration files are **auto-generated** by Vagrant when running the cluster for the first time.\r\nIn this case, default values listed at the top of this page are used.\r\n\r\nSimilarly for logstash you need to change conf/logstash-<VM Name>.conf file again in `conf` directory.\r\n\r\n\r\n5. Working with your cluster\r\n--\r\n\r\nHere are a few sample calls to get you started.\r\n\r\nSend some sample syslog messages to Logstash to be indexed in Elasticsearch.\r\n\r\n```bash\r\n# From the host machine\r\n# I'm assuming the host is some sort of UNIX box\r\n# If windows, then you are on your own :)\r\necho \"<133>$0[$$]: Test syslog message from Netcat\" | nc -4 localhost 5514\r\necho \"<133>$0[$$]: Second Test syslog message from Netcat\" | nc -4 localhost 5514\r\n```\r\n\r\nNext go to Kibana Dashboard at [http://localhost:5601/](http://localhost:5601/). Kibana will auto discover the logstash index and ask you some basic question, just select the default, and then go to the discover tab. You should see the two sample messages.\r\n\r\n---\r\n\r\n**TODO**\r\n\r\nSee issues.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}